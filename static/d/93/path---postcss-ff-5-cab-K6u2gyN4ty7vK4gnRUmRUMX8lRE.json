{"data":{"markdownRemark":{"id":"267c6a5b-5de1-57e1-bf2d-c1d39f931395","excerpt":"Working with PostCSS I’ve been using   for quite some time now as my go to CSS pre-processor. It felt very familiar coming from vanilla CSS…","html":"<h2 id=\"working-with-postcss\"><a href=\"#working-with-postcss\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working with PostCSS</h2>\n<p>I’ve been using <code class=\"language-text\">SASS</code> for quite some time now as my go to CSS pre-processor. It felt very familiar coming from vanilla CSS, or <strong>Cascading Style Sheets</strong> but gives you conveniances like:</p>\n<ul>\n<li>variables for colors, fonts, etc</li>\n<li>nesting!</li>\n<li>mixins</li>\n</ul>\n<p>I remember on my first project that I was introduced to SASS, I was impressed on how quickly I adopted it and became a fan.</p>\n<p>The only negative I could think of is that it requires a task runner to convert the SASS code into regular CSS that the browser could understand. At the time I was introduced to SASS we were using <code class=\"language-text\">grunt</code> as our task runner which later we replaced with <code class=\"language-text\">gulp</code> and now <code class=\"language-text\">webpack</code> is all the rage.</p>\n<p>This step was at first a manual process having to run things like <code class=\"language-text\">gulp sass</code> to run the sass transpilation but you could also set watchers to run anytime gulp detected changes in any .sass files.</p>\n<h2 id=\"what-problem-does-postcss-solve\"><a href=\"#what-problem-does-postcss-solve\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What problem does PostCSS solve?</h2>\n<p>PostCSS has come along and become very popular. PostCSS is an engine for transforming CSS with Javascript. Since it using NodeJS, it claims to be <strong>3-30 times faster</strong> than the competition. SASS for example is built in Ruby and once you start adding gems can run a little bit slower. PostCSS is modular so at its core it is much smaller and you only add what you need.</p>\n<p>Another big difference is that it can also do post processing like add prefixes to a finished stylesheet. PostCSS has a large plug-in base so you can choose plug-ins like future CSS support, prefixing to support older browsers, and SASS-like features like nesting and variables.</p>\n<h2 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<p>PostCSS requires Node so you can install it on a mac with this brew command from terminal.</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">brew update\nbrew install node</code></pre></div>\n<p>If you’re unfamiliar with brew, it is a package manager for macOS and you can learn more here.</p>\n<p><a href=\"https://brew.sh/\">Homebrew -the missing package manager for macOS</a></p>\n<h2 id=\"installing-postcss\"><a href=\"#installing-postcss\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing PostCSS</h2>\n<p>Looking at the <a href=\"https://github.com/postcss/postcss\">github repo</a>, there are variuos instructions based on your build tool. Since I am using <a href=\"https://github.com/postcss/postcss-loader\">webpack</a>, we’ll start off by installing PostCSS with this command from terminal.</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">yarn add postcss-loader -D</code></pre></div>\n<p>We’ll configure our <code class=\"language-text\">webpack.config.js</code> like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n                loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'css-loader?importLoaders=1'</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'postcss-loader'</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then create a <code class=\"language-text\">postcss.config.js</code> file which contains your plugins. In the code block below, we have added the <strong>precss</strong> and <strong>autoprefixir</strong> plugins.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'precss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'autoprefixer'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"postcss-plugins\"><a href=\"#postcss-plugins\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PostCSS Plugins</h2>\n<p>If you’re curiuos to which plugins exists, you can checkout <a href=\"http://postcss.parts/\">PostCSS.parts</a> which is a searchable catalog of PostCSS plugins. Currently PostCSS has more than 200 plugins.</p>\n<p>Some popular PostCSS plugins are:</p>\n<ul>\n<li><a href=\"http://cssnano.co/\">cssnano</a>: compresses your css</li>\n<li><a href=\"https://github.com/postcss/autoprefixer\">autoprefixer</a>: parse css and add vendor prefixes</li>\n<li>[cssnext][cssnext]: use tomorrow’s css syntax, today</li>\n<li>[preCSS][precss]: Sass-like markup in your CSS files</li>\n<li>[lostGrid][lostgrid]: powerful grid system</li>\n</ul>\n<h2 id=\"closing\"><a href=\"#closing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closing</h2>\n<p>I am excited to continue learning PostCSS as it feels like I am in the future. It is fast, modular, and lean. It requires some setup, but once you do, I hope you will be enjoy the experience as much as I do.</p>\n<h3 id=\"further-learning\"><a href=\"#further-learning\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Further Learning</h3>\n<p>Ray Villalobos at Lynda has a great course on getting started with PostCSS named [PostCSS: First Look][lynda].</p>\n<p>[cssnext]: <a href=\"http://cssnext.io/\">http://cssnext.io/</a> \n[preCSS]: <a href=\"https://github.com/jonathantneal/precss\">https://github.com/jonathantneal/precss</a>\n[lostgrid]: <a href=\"https://github.com/peterramsing/lost\">https://github.com/peterramsing/lost</a>\n[lynda]: <a href=\"https://www.lynda.com/CSS-tutorials/PostCSS-First-Look/442850-2.html\">https://www.lynda.com/CSS-tutorials/PostCSS-First-Look/442850-2.html</a></p>","frontmatter":{"title":"PostCSS","date":"March 01, 2017","slug":"postcss","language":null,"tags":["css","frontend","tools"],"cover":{"publicURL":"/static/postcss-5e99eddcc47f3b77ae098b1d94bb9519.jpg"},"imageTw":null,"imageFb":null}}},"pageContext":{"slug":"postcss","previous":{"frontmatter":{"title":"World of Vue.js","slug":"vue","type":null,"tags":["javaScript","vue"]}},"next":{"frontmatter":{"title":"Goals for 2018","slug":"goals-for-2018","type":null,"tags":["goals"]}}}}